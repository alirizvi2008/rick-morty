{"version":3,"sources":["constants/ThemeTypes.ts","reportWebVitals.ts","reducers/charactersReducer.ts","reducers/filtersReducer.ts","reducers/themeReducer.ts","store.ts","components/Navbar.styled.tsx","components/Toggle.style.tsx","selectors/themeSelector.ts","components/Navbar.tsx","selectors/charactersSelector.ts","actions/episodeActions.ts","components/CardText.style.tsx","components/CardText.tsx","reducers/episodeReducer.ts","pages/DetailPage/components/DetailCard.styled.tsx","pages/DetailPage/components/DetailCard.tsx","pages/DetailPage/DetailPage.tsx","components/Button.styled.tsx","components/ImageWrapper.styled.tsx","components/Input.styled.tsx","components/SearchBox.styled.tsx","pages/HomePage/HomePage.tsx","selectors/filtersSelector.ts","services/characterService.ts","pages/ResultPage/components/CharacterCard.style.tsx","pages/ResultPage/components/ViewDetail.sytled.tsx","pages/ResultPage/components/CharacterCard.tsx","pages/ResultPage/components/CharacterListContainer.styled.tsx","pages/ResultPage/components/PaginationComponent.style.tsx","pages/ResultPage/components/Pagination.tsx","constants/PageSize.ts","pages/ResultPage/components/SearchBox.styled.tsx","pages/ResultPage/ResultPage.tsx","App.tsx","theme/darkTheme.ts","theme/GlobalStyle.ts","theme/lightTheme.ts","ThemedApp.tsx","index.tsx"],"names":["ThemeTypes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","error","data","info","undefined","charactersSlice","createSlice","name","reducers","appendCharacters","state","action","concat","payload","results","replaceCharacters","getCharactersFailure","getCharacters","actions","pageNumber","filtersSlice","updatePageNumber","reset","Light","themeSlice","toggle","Dark","store","configureStore","reducer","characters","charactersReducer","theme","themeReducer","filters","filtersReducer","NavbarWrapper","styled","ToggleWrapper","Notch","p","isLight","themeSelector","Navbar","useSelector","dispatch","useDispatch","to","src","process","height","alt","onClick","charactersSelector","createAction","success","Wrapper","alignCentre","css","Label","subText","Text","textAlign","CardText","label","value","episodeState","episodeReducer","createReducer","toString","DetailContainer","Episode","EpisodeDate","BuyButton","link","linkHover","DetailCard","id","created","episode","gender","image","location","origin","species","status","type","url","React","useReducer","useEffect","a","promises","map","e","fetch","res","json","Promise","all","width","stopPropagation","alert","handleOnClick","Date","toLocaleString","air_date","DetailPage","match","character","find","c","Number","params","Button","ImageWrapper","Input","SearchBox","HomePage","textInput","useRef","history","useHistory","onSearchClick","searchTerm","current","push","ref","onKeyPress","key","filtersSelector","fetchCharacters","ok","reject","CardContainer","CardDetailContainer","ViewDetail","CharacterCard","length","CharacterListContainer","PaginationWrapper","Separator","PageItem","isActive","body","SideItem","Pagination","page","nextPage","next","totalPages","Math","ceil","count","ResultsSearchBox","ResultsInput","ResultPage","useLocation","URLSearchParams","search","get","slice","newSearchTerm","batch","catch","updateQuery","App","path","component","text","toggleBorder","background","createGlobalStyle","ThemedApp","darkTheme","lightTheme","GlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.304c7058.chunk.js","sourcesContent":["export enum ThemeTypes {\r\n    Dark = 'dark',\r\n    Light = 'light',\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { Character, Info } from '../types/Character'\r\n\r\nexport interface CharacterState {\r\n    loading: boolean;\r\n    error: boolean;\r\n    data: Character[];\r\n    info?: Info;\r\n}\r\n\r\nconst initialState: CharacterState = {\r\n    loading: true,\r\n    error: false,\r\n    data: [],\r\n    info: undefined,\r\n};\r\n\r\nconst charactersSlice = createSlice({\r\n    name: 'characters',\r\n    initialState,\r\n    reducers: {\r\n        appendCharacters: (state, action) => {\r\n            state.data = state.data.concat(action.payload.results);\r\n            state.info = action.payload.info;\r\n            state.loading = false;\r\n            state.error = false;\r\n        },\r\n        replaceCharacters: (state, action) => {\r\n            state.data = action.payload.results;\r\n            state.info = action.payload.info;\r\n            state.loading = false;\r\n            state.error = false;\r\n        },\r\n        getCharactersFailure: state => {\r\n            state.error = true;\r\n            state.loading = false;\r\n            state.data = initialState.data;\r\n            state.info = initialState.info;\r\n        },\r\n        getCharacters: state => {\r\n            state.loading = true;\r\n            state.error = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { appendCharacters, replaceCharacters, getCharactersFailure, getCharacters } = charactersSlice.actions;\r\n\r\nexport default charactersSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { Filters } from '../types/Filters';\r\n\r\nconst initialState: Filters = {\r\n    pageNumber: 1,\r\n};\r\n\r\nconst filtersSlice = createSlice({\r\n    name: 'filters',\r\n    initialState,\r\n    reducers: {\r\n        updatePageNumber(state, action) {\r\n            state.pageNumber = action.payload;\r\n        },\r\n        reset(state, action) {\r\n            state = initialState;\r\n        }\r\n    },\r\n});\r\n\r\nexport const { updatePageNumber } = filtersSlice.actions;\r\n\r\nexport default filtersSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { ThemeTypes } from '../constants/ThemeTypes';\r\n\r\nconst initialState: string = ThemeTypes.Light;\r\n\r\nconst themeSlice = createSlice({\r\n    name: 'theme',\r\n    initialState,\r\n    reducers: {\r\n        toggle(state) {\r\n            return state === ThemeTypes.Dark ? ThemeTypes.Light : ThemeTypes.Dark;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { toggle } = themeSlice.actions;\r\n\r\nexport default themeSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport charactersReducer from './reducers/charactersReducer';\r\nimport filtersReducer from './reducers/filtersReducer';\r\nimport themeReducer from './reducers/themeReducer';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        characters: charactersReducer,\r\n        theme: themeReducer,\r\n        filters: filtersReducer,\r\n    },\r\n});\r\n\r\nexport default store;\r\nexport type AppState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;","import styled from 'styled-components';\r\n\r\nconst NavbarWrapper = styled('div')`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n  align-items: center;\r\n`;\r\n\r\nexport { NavbarWrapper };\r\n","import styled from 'styled-components';\r\n\r\nconst ToggleWrapper = styled('div')`\r\n  width: 50px;\r\n  min-width: 50px;\r\n  height: 25px;\r\n  border-radius: 25px;\r\n  border: 1px solid #666;\r\n  display: flex;\r\n  background: black;\r\n  cursor: pointer;\r\n`;\r\n\r\ninterface NotchProps {\r\n    isLight: boolean;\r\n}\r\n\r\nconst Notch = styled('div')<NotchProps>`\r\n  height: 21px;\r\n  width: 21px;\r\n  border: 1px solid #666;\r\n  margin-top: 1px;\r\n  background: white;\r\n  border-radius: 50%;\r\n  transition: transform 0.1s linear;\r\n  transform: translate(${(p) => (p.isLight ? '1px' : '26px')});\r\n`;\r\n\r\nexport { ToggleWrapper, Notch };\r\n","import { AppState } from '../store';\r\n\r\nexport const themeSelector = (state: AppState) => state.theme;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { toggle } from '../reducers/themeReducer';\r\nimport { ThemeTypes } from '../constants/ThemeTypes';\r\nimport { NavbarWrapper } from './Navbar.styled';\r\nimport { Notch, ToggleWrapper } from './Toggle.style';\r\nimport { themeSelector } from '../selectors/themeSelector';\r\n\r\nconst Navbar: React.FC<{}> = () => {\r\n  const theme = useSelector(themeSelector);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <NavbarWrapper>\r\n      <span>\r\n        <Link to='/'>\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/Rick_and_Morty_logo.png`}\r\n            height='40px'\r\n            alt=''\r\n          />\r\n        </Link>\r\n      </span>\r\n      <ToggleWrapper onClick={() => dispatch(toggle())}>\r\n        <Notch isLight={theme === ThemeTypes.Light} />\r\n      </ToggleWrapper>\r\n    </NavbarWrapper>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { AppState } from '../store';\r\n\r\nexport const charactersSelector = (state: AppState) => state.characters;","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { Episode } from '../types/Episode';\r\n\r\nexport const error = createAction<boolean>(\"error\");\r\nexport const success = createAction<Episode[]>(\"success\");","import styled, { css } from 'styled-components';\r\n\r\ninterface WrapperProps {\r\n  alignCentre?: boolean;\r\n}\r\nconst Wrapper = styled('div')<WrapperProps>`\r\n  margin: 4px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  ${(p) =>\r\n    p.alignCentre &&\r\n    css`\r\n      align-items: center;\r\n    `}\r\n`;\r\n\r\nconst Label = styled('div')`\r\n  font-size: 12px;\r\n  color: ${(p) => p.theme.subText};\r\n  border-bottom: 1px solid ${(p) => p.theme.subText};\r\n  max-width: fit-content;\r\n`;\r\n\r\ninterface TextProps {\r\n  textAlign?: 'left' | 'right' | 'center' | 'justify' | 'initial' | 'inherit';\r\n}\r\n\r\nconst Text = styled('div')<TextProps>`\r\n  font-family: cursive;\r\n  text-align: ${(p) => p.textAlign || 'inherit'};\r\n`;\r\n\r\nexport { Wrapper, Label, Text };\r\n","import React from 'react';\r\nimport { Label, Text, Wrapper } from './CardText.style';\r\n\r\ninterface Props {\r\n  label: string;\r\n  value?: string | number;\r\n  alignCentre?: boolean;\r\n}\r\n\r\nconst CardText: React.FC<Props> = ({ label, value, alignCentre }) => {\r\n  return (\r\n    <Wrapper alignCentre={alignCentre}>\r\n      <Label>{label}</Label>\r\n      <Text>{value || '-'}</Text>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CardText;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { error, success } from '../actions/episodeActions';\r\nimport { Episode } from '../types/Episode';\r\n\r\nexport interface EpisodeState {\r\n    loading: boolean;\r\n    error: boolean;\r\n    data: Episode[];\r\n}\r\n\r\nexport const episodeState: EpisodeState = {\r\n    loading: true,\r\n    error: false,\r\n    data: [],\r\n};\r\n\r\nexport const episodeReducer = createReducer(episodeState, {\r\n    [error.toString()]: (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.data = [];\r\n\r\n    },\r\n    [success.toString()]: (state, action) => {\r\n        state.loading = false;\r\n        state.error = false;\r\n        state.data = action.payload;\r\n    }\r\n});","import styled from 'styled-components';\r\n\r\nconst DetailContainer = styled('div')`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0 auto 20px auto;\r\n  align-items: center;\r\n  text-align: center;\r\n  border: 1px solid #dddfe2;\r\n  width: 400px;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst Episode = styled('div')`\r\n  margin: 4px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst EpisodeDate = styled('span')`\r\n  color: ${(p) => p.theme.subText};\r\n  font-size: 14px;\r\n`;\r\n\r\nconst BuyButton = styled('button')`\r\n  display: block;\r\n  height: 30px;\r\n  border-radius: 8px;\r\n  border-width: 1px;\r\n  width: 180px;\r\n  cursor: pointer;\r\n  background-color: ${p => p.theme.link};;\r\n  color: white;\r\n  border: none;\r\n  font-size: 16px;\r\n  margin: 12px 0;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n  :hover {\r\n    background-color: ${p => p.theme.linkHover};\r\n  }\r\n`;\r\n\r\nexport { BuyButton, DetailContainer, Episode, EpisodeDate };\r\n","import React from 'react';\r\nimport { error, success } from '../../../actions/episodeActions';\r\nimport CardText from '../../../components/CardText';\r\nimport { Label, Text } from '../../../components/CardText.style';\r\nimport { episodeReducer, episodeState } from '../../../reducers/episodeReducer';\r\nimport { Character } from '../../../types/Character';\r\nimport {\r\n  BuyButton,\r\n  DetailContainer,\r\n  Episode,\r\n  EpisodeDate,\r\n} from './DetailCard.styled';\r\n\r\nconst DetailCard: React.FC<Character> = ({\r\n  id,\r\n  name,\r\n  created,\r\n  episode,\r\n  gender,\r\n  image,\r\n  location,\r\n  origin,\r\n  species,\r\n  status,\r\n  type,\r\n  url,\r\n}) => {\r\n  const [state, dispatch] = React.useReducer(episodeReducer, episodeState);\r\n  React.useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const promises = episode?.map((e) =>\r\n          fetch(e).then((res) => res.json())\r\n        );\r\n        const res = await Promise.all(promises);\r\n        dispatch(success(res));\r\n      } catch {\r\n        dispatch(error(true));\r\n      }\r\n    })();\r\n  }, [episode]);\r\n\r\n  const handleOnClick = (e: React.SyntheticEvent, name: string) => {\r\n    e.stopPropagation();\r\n    alert(`Buying \"${name}\" merchandise!`);\r\n  };\r\n  return (\r\n    <DetailContainer>\r\n      <img src={image} alt='character img' width='400px' />\r\n      <BuyButton\r\n        type='button'\r\n        name='buy-btn'\r\n        onClick={(e) => handleOnClick(e, name)}\r\n      >\r\n        Buy merchandise\r\n      </BuyButton>\r\n      <CardText alignCentre label='Id' value={id} />\r\n      <CardText alignCentre label='Name' value={name} />\r\n      <CardText alignCentre label='Gender' value={gender} />\r\n      <CardText alignCentre label='Species' value={species} />\r\n      <CardText alignCentre label='Status' value={status} />\r\n      <CardText alignCentre label='Type' value={type} />\r\n      <CardText alignCentre label='Origin' value={origin.name} />\r\n      <CardText alignCentre label='Locatiion' value={location?.name} />\r\n      <CardText\r\n        alignCentre\r\n        label='Created'\r\n        value={created && new Date(created).toLocaleString()}\r\n      />\r\n      <Label>Episodes</Label>\r\n      {state.data?.map((e) => (\r\n        <Episode key={e.id}>\r\n          <Text>{e.name}</Text>\r\n          <EpisodeDate>\r\n            {e.episode} - {e.air_date}\r\n          </EpisodeDate>\r\n        </Episode>\r\n      ))}\r\n      {state.error && <Text>Error fetching Episodes...</Text>}\r\n      {state.loading && <Text>Loading...</Text>}\r\n    </DetailContainer>\r\n  );\r\n};\r\n\r\nexport default DetailCard;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { charactersSelector } from '../../selectors/charactersSelector';\r\nimport DetailCard from './components/DetailCard';\r\n\r\nconst DetailPage: React.FC<RouteComponentProps<{ id: string }>> = ({\r\n  match,\r\n}) => {\r\n  const { data } = useSelector(charactersSelector);\r\n  const character = data.find((c) => c.id === Number(match.params?.id));\r\n  return <>{character && <DetailCard {...character} />}</>;\r\n};\r\n\r\nexport default DetailPage;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled('button')`\r\n  display: block;\r\n  height: 48px;\r\n  border-radius: 8px;\r\n  border-width: 1px;\r\n  width: 200px;\r\n  cursor: pointer;\r\n  background-color: ${p => p.theme.link};\r\n  color: white;\r\n  border: none;\r\n  font-size: 20px;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n  :hover {\r\n    background-color: ${p => p.theme.linkHover};\r\n  }\r\n`;\r\n\r\nexport { Button };\r\n","import styled from 'styled-components';\r\n\r\nconst ImageWrapper = styled('div')`\r\n  text-align: center;\r\n  height: 30vh;\r\n`;\r\n\r\nexport { ImageWrapper };\r\n","import styled from 'styled-components';\r\n\r\nconst Input = styled('input')`\r\n  width: 70%;\r\n  display: block;\r\n  height: 40px;\r\n  border-radius: 15px;\r\n  font-size: 24px;\r\n  margin-bottom: 20px;\r\n  padding: 0 12px;\r\n  border: 1px solid #dddfe2;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport { Input };\r\n","import styled from 'styled-components';\r\n\r\nconst SearchBox = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  background-color: #f8f7f9;\r\n  margin: 70px auto;\r\n  padding: 40px;\r\n  border-radius: 16px;\r\n  width: 80%;\r\n  max-width: 850px; \r\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 8px 3px;\r\n`;\r\n\r\nexport { SearchBox };\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button } from '../../components/Button.styled';\r\nimport { ImageWrapper } from '../../components/ImageWrapper.styled';\r\nimport { Input } from '../../components/Input.styled';\r\nimport { SearchBox } from '../../components/SearchBox.styled';\r\n\r\nconst HomePage: React.FC<{}> = () => {\r\n  const textInput = React.useRef<HTMLInputElement>(null);\r\n  const history = useHistory();\r\n\r\n  const onSearchClick = () => {\r\n    const searchTerm = textInput.current?.value || '';\r\n    history.push(`/results?name=${searchTerm}`);\r\n  };\r\n  const handleKeypress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      onSearchClick();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <ImageWrapper>\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/home_bg.png`}\r\n          alt='rick-morty'\r\n          height='100%'\r\n        />\r\n      </ImageWrapper>\r\n      <SearchBox>\r\n        <Input\r\n          type='text'\r\n          name='searchBox'\r\n          ref={textInput}\r\n          onKeyPress={handleKeypress}\r\n        />\r\n        <Button type='button' onClick={onSearchClick}>\r\n          SEARCH\r\n        </Button>\r\n      </SearchBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { AppState } from '../store';\r\n\r\nexport const filtersSelector = (state: AppState) => state.filters;","import { CharacterApiResponse } from '../types/Character';\r\n\r\nexport const fetchCharacters = async (searchTerm: string): Promise<CharacterApiResponse> => {\r\n    return fetch(`https://rickandmortyapi.com/api/character/?name=${searchTerm}`)\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            } else if (res.status === 404) {\r\n                return Promise.reject('error 404')\r\n            }\r\n        });\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst CardContainer = styled('div')`\r\n  display: flex;\r\n  border: 1px solid #dddfe2;\r\n  width: 600px;\r\n  margin-bottom: 16px;\r\n  position: relative;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst CardDetailContainer = styled('div')`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 20px;\r\n`;\r\n\r\nconst ImageWrapper = styled('img')`\r\n  height: 180px;\r\n  border-top-left-radius: 8px;\r\n  border-bottom-left-radius: 8px;\r\n`;\r\n\r\nexport { CardContainer, CardDetailContainer, ImageWrapper };\r\n","import styled from 'styled-components';\r\n\r\nconst ViewDetail = styled('span')`\r\n  position: absolute;\r\n  right: 8px;\r\n  bottom: 8px;\r\n  cursor: pointer;\r\n  > a {\r\n    color: ${p => p.theme.link}; \r\n  } \r\n  :hover {\r\n    text-decoration: underline; \r\n  }\r\n`;\r\n\r\nexport { ViewDetail };\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Character } from '../../../types/Character';\r\nimport CardText from '../../../components/CardText';\r\nimport { CardContainer, CardDetailContainer, ImageWrapper } from './CharacterCard.style';\r\nimport { ViewDetail } from './ViewDetail.sytled';\r\n\r\nconst CharacterCard: React.FC<Character> = ({\r\n  id,\r\n  name,\r\n  image,\r\n  episode,\r\n  location,\r\n}) => {\r\n  return (\r\n    <CardContainer>\r\n      <ImageWrapper src={image} alt='character img' />\r\n      <CardDetailContainer>\r\n        <CardText label='Name' value={name} />\r\n        <CardText label='Number of episodes' value={episode?.length} />\r\n        <CardText label='Last location' value={location?.name} />\r\n      </CardDetailContainer>\r\n      <ViewDetail>\r\n        <Link to={`/detail/${id}`}>View more detail</Link>\r\n      </ViewDetail>\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import styled from 'styled-components';\r\n\r\nconst CharacterListContainer = styled('div')`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport { CharacterListContainer };\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst PaginationWrapper = styled('div')`\r\n  padding: 1rem 0;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Separator = styled('div')`\r\n  width: 1rem;\r\n  margin: 0 0.25rem;\r\n`;\r\n\r\ninterface PageItemProps {\r\n  isActive?: boolean;\r\n}\r\n\r\nconst PageItem = styled('button')<PageItemProps>`\r\n  background: transparent;\r\n  border: none;\r\n  height: 2rem;\r\n  width: 2rem;\r\n  margin: 0 0.25rem;\r\n  border-radius: 50%;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  color: ${(p) => p.theme.link};\r\n  ${(p) =>\r\n    p.isActive &&\r\n    css`\r\n      background-color: ${(p) => p.theme.link};\r\n      color: ${(p) => p.theme.body};\r\n    `}\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n`;\r\n\r\nconst SideItem = styled(PageItem)`\r\n  box-shadow: transparent 0px 0px 0px 1px, transparent 0px 0px 0px 4px,\r\n    rgba(0, 0, 0, 0.18) 0px 2px 4px;\r\n`;\r\n\r\nexport { PaginationWrapper, Separator, PageItem, SideItem };\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Text } from '../../../components/CardText.style';\r\nimport { PageSize } from '../../../constants/PageSize';\r\nimport { appendCharacters } from '../../../reducers/charactersReducer';\r\nimport { updatePageNumber } from '../../../reducers/filtersReducer';\r\nimport { charactersSelector } from '../../../selectors/charactersSelector';\r\nimport { filtersSelector } from '../../../selectors/filtersSelector';\r\nimport {\r\n  PageItem,\r\n  PaginationWrapper,\r\n  Separator,\r\n  SideItem,\r\n} from './PaginationComponent.style';\r\n\r\n\r\nconst Pagination: React.FC<{}> = () => {\r\n  const { pageNumber: page } = useSelector(filtersSelector);\r\n  const { data, info } = useSelector(charactersSelector);\r\n\r\n  const dispatch = useDispatch();\r\n  const nextPage = info?.next;\r\n  const totalPages = Math.ceil((info?.count || 1) / PageSize);\r\n\r\n  React.useEffect(() => {\r\n    if (data.length === page * PageSize && nextPage) {\r\n      fetch(nextPage)\r\n        .then((data) => data.json())\r\n        .then((data) => dispatch(appendCharacters(data)));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Text textAlign='center'>\r\n        Page {page} of {totalPages}\r\n      </Text>\r\n      <PaginationWrapper>\r\n        {page !== 1 && (\r\n          <SideItem\r\n            onClick={() => dispatch(updatePageNumber(page - 1))}\r\n            type='button'\r\n          >\r\n            &lt;\r\n          </SideItem>\r\n        )}\r\n        <PageItem\r\n          onClick={() => dispatch(updatePageNumber(1))}\r\n          type='button'\r\n          isActive={page === 1}\r\n        >\r\n          {1}\r\n        </PageItem>\r\n        {page > 3 && <Separator>...</Separator>}\r\n        {page === totalPages && totalPages > 3 && (\r\n          <PageItem onClick={() => dispatch(updatePageNumber(page - 2))} type='button'>\r\n            {page - 2}\r\n          </PageItem>\r\n        )}\r\n        {page > 2 && (\r\n          <PageItem onClick={() => dispatch(updatePageNumber(page - 1))} type='button'>\r\n            {page - 1}\r\n          </PageItem>\r\n        )}\r\n        {page !== 1 && (\r\n          <PageItem\r\n            onClick={() => dispatch(updatePageNumber(page))}\r\n            type='button'\r\n            isActive\r\n          >\r\n            {page}\r\n          </PageItem>\r\n        )}\r\n        {page < totalPages - 1 && (\r\n          <PageItem onClick={() => dispatch(updatePageNumber(page + 1))} type='button'>\r\n            {page + 1}\r\n          </PageItem>\r\n        )}\r\n        {page === 1 && totalPages > 3 && (\r\n          <PageItem onClick={() => dispatch(updatePageNumber(page + 2))} type='button'>\r\n            {page + 2}\r\n          </PageItem>\r\n        )}\r\n        {page !== totalPages && (\r\n          <SideItem\r\n            onClick={() => dispatch(updatePageNumber(page + 1))}\r\n            type='button'\r\n          >\r\n            &gt;\r\n          </SideItem>\r\n        )}\r\n      </PaginationWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","export const PageSize: number = 5;","import styled from 'styled-components';\r\nimport { Input } from '../../../components/Input.styled';\r\n\r\nconst ResultsSearchBox = styled('div')`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 0 auto;\r\n  padding: 16px;\r\n  background: gray;\r\n  margin-bottom: 24px;\r\n  align-items: center;\r\n`;\r\n\r\nconst ResultsInput = styled(Input)`\r\n  margin-bottom: 0;\r\n  margin-right: 8px;\r\n  width: 550px;\r\n  height: 46px;\r\n`;\r\n\r\nexport { ResultsSearchBox, ResultsInput };\r\n","import React from 'react';\r\nimport { batch, useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { Button } from '../../components/Button.styled';\r\nimport { Text } from '../../components/CardText.style';\r\nimport { PageSize } from '../../constants/PageSize';\r\nimport {\r\n  getCharacters,\r\n  getCharactersFailure,\r\n  replaceCharacters,\r\n} from '../../reducers/charactersReducer';\r\nimport { updatePageNumber } from '../../reducers/filtersReducer';\r\nimport { charactersSelector } from '../../selectors/charactersSelector';\r\nimport { filtersSelector } from '../../selectors/filtersSelector';\r\nimport { fetchCharacters } from '../../services/characterService';\r\nimport CharacterCard from './components/CharacterCard';\r\nimport { CharacterListContainer } from './components/CharacterListContainer.styled';\r\nimport Pagination from './components/Pagination';\r\nimport { ResultsInput, ResultsSearchBox } from './components/SearchBox.styled';\r\n\r\nconst ResultPage: React.FC<{}> = () => {\r\n  const params = useLocation();\r\n  const history = useHistory();\r\n  const searchTerm = new URLSearchParams(params.search).get('name') || '';\r\n  const textInput = React.useRef<HTMLInputElement>(null);\r\n\r\n  const { data, loading, error } = useSelector(charactersSelector);\r\n  const { pageNumber } = useSelector(filtersSelector);\r\n  const dispatch = useDispatch();\r\n\r\n  const characters = data\r\n    ? data.slice((pageNumber - 1) * PageSize, pageNumber * PageSize)\r\n    : [];\r\n\r\n  React.useEffect(() => {\r\n    (textInput.current as HTMLInputElement).value = searchTerm;\r\n    const newSearchTerm = textInput.current?.value;\r\n    batch(() => {\r\n      dispatch(updatePageNumber(1));\r\n      dispatch(getCharacters());\r\n    });\r\n    fetchCharacters(newSearchTerm || searchTerm)\r\n      .then((data) => dispatch(replaceCharacters(data)))\r\n      .catch(() => dispatch(getCharactersFailure()));\r\n  }, [dispatch, searchTerm]);\r\n\r\n  const updateQuery = () =>\r\n    history.push(`/results?name=${textInput.current?.value}`);\r\n\r\n  const handleKeypress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      updateQuery();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <ResultsSearchBox>\r\n        <ResultsInput\r\n          type='text'\r\n          name='searchBox'\r\n          ref={textInput}\r\n          onKeyPress={handleKeypress}\r\n        />\r\n        <Button type='button' onClick={updateQuery}>\r\n          SEARCH\r\n        </Button>\r\n      </ResultsSearchBox>\r\n      {error && <Text textAlign='center'>No Characters match search query.</Text>}\r\n      {loading && <Text textAlign='center'>Loading...</Text>}\r\n      {characters.length > 0 && !loading && (\r\n        <>\r\n          <CharacterListContainer>\r\n            {characters.map((character) => (\r\n              <CharacterCard key={character.id} {...character} />\r\n            ))}\r\n          </CharacterListContainer>\r\n          <Pagination />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResultPage;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport DetailPage from './pages/DetailPage/DetailPage';\nimport HomePage from './pages/HomePage/HomePage';\nimport ResultPage from './pages/ResultPage/ResultPage';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path='/results' component={ResultPage} />\n        <Route path='/detail/:id' component={DetailPage} />\n        <Route path='/' component={HomePage} /> \n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { MyTheme } from './theme';\r\n\r\nconst theme: MyTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    toggleBorder: '#6B8096',\r\n    background: '#999',\r\n    subText: '#bbb',\r\n    link: '#3f8ba9',\r\n    linkHover: '#3f8ba9a6',\r\n};\r\nexport default theme;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n body {\r\n    margin: 0;\r\n    padding: 0;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n    transition: all 0.250s linear;\r\n }\r\n`;","import { MyTheme } from './theme';\r\n\r\nconst theme: MyTheme = {\r\n    body: '#FFF',\r\n    text: '#363537',\r\n    toggleBorder: '#FFF',\r\n    background: '#363537',\r\n    subText: '#777',\r\n    link: '#5392f9',\r\n    linkHover: '#87b3fb'\r\n};\r\n\r\nexport default theme;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport App from './App';\r\nimport darkTheme from './theme/darkTheme';\r\nimport GlobalStyle from './theme/GlobalStyle';\r\nimport lightTheme from './theme/lightTheme';\r\nimport { ThemeTypes } from './constants/ThemeTypes';\r\nimport { themeSelector } from './selectors/themeSelector';\r\n\r\nconst ThemedApp: React.FC<{}> = () => {\r\n  const theme = useSelector(themeSelector);\r\n  return (\r\n    <ThemeProvider theme={theme === ThemeTypes.Dark ? darkTheme : lightTheme}>\r\n      <GlobalStyle />\r\n      <App />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default ThemedApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport ThemedApp from './ThemedApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemedApp />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}